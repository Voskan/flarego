version: "3.9"

# deployments/docker-compose.yaml
# Local development stack for FlareGo

# -----------------------------------------------------------------------------
# Opinionated development stack for FlareGo consisting of:
# • Redis (optional) – shared retention cache for HA or page reloads.
# • Gateway          – gRPC + HTTP/WebSocket front‑door + embedded UI.
# • Agent            – self‑sampling instance to generate live data.
# • Demo App         – tiny Go program that allocates goroutines so you can
#   see flamegraphs immediately (optional, can be removed).
#
# The compose file is **not** tuned for production: there is no persistence,
# logging driver, resource limits or TLS.  It's meant for local hacking,
# screenshots and quick PoCs.
# -----------------------------------------------------------------------------

services:
  redis:
    image: redis:7-alpine
    container_name: flarego-redis
    command:
      - redis-server
      - "--save"
      - ""
      - "--appendonly"
      - "no"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - flarego-net

  gateway:
    build:
      context: ..
      dockerfile: build/Dockerfile.gateway
    container_name: flarego-gateway
    depends_on:
      redis:
        condition: service_healthy
    environment:
      FLAREGO_GW_LISTEN: ":4317"
      FLAREGO_GW_HTTP_LISTEN: ":8080"
      FLAREGO_GW_RETENTION: "15m"
    ports:
      - "4317:4317" # gRPC OTLP‑like ingest
      - "8080:8080" # UI + WebSocket + /metrics
    networks:
      - flarego-net
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/metrics",
        ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 30s

  agent:
    build:
      context: ..
      dockerfile: build/Dockerfile.agent
    container_name: flarego-agent
    depends_on:
      gateway:
        condition: service_healthy
    environment:
      GATEWAY: "gateway:4317"
      HZ: "100"
    command:
      - /usr/bin/flarego-agent
      - --gateway
      - gateway:4317
      - --hz
      - "100"
    networks:
      - flarego-net

  demo-app:
    build:
      context: ../examples/basic
    container_name: flarego-demo
    depends_on:
      - gateway
    environment:
      WORKLOAD: "medium"
      PORT: "8081"
    ports:
      - "8081:8081"
    networks:
      - flarego-net
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8081/health",
        ]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  flarego-net:
    driver: bridge
