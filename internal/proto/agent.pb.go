// internal/proto/agent.proto
// RPC contract for control‐plane communication *from* the gateway *to* agents.
// In FlareGo v0.1 agents are largely autonomous (they push flamegraphs and do
// not await commands), but exposing this service early allows future features
// such as remote sampler tuning, version upgrade orchestration and health
// checks without breaking backward compatibility.
//
// Design principles:
//   • Keep messages minimal – only what is required for handshake and basic
//     ping/pong.  Fine‑grained control commands can be added with new RPCs or
//     oneof fields in ControlRequest.
//   • Streaming is unidirectional gateway→agent so that the gateway can push
//     config changes instantly while the agent needs only to ACK.
//   • Field numbers are frozen once released.  Reserve ranges for internal
//     use (100‑199) and experimental (200‑299).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: agent.proto

package agentpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AgentInfo is sent by the agent once on connection so the gateway can label
// metrics and UI panels.
type AgentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ULID string, unique per process start
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Pid           uint32                 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"` // FlareGo agent version string
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`       // arbitrary key=value labels
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentInfo) Reset() {
	*x = AgentInfo{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfo) ProtoMessage() {}

func (x *AgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfo.ProtoReflect.Descriptor instead.
func (*AgentInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *AgentInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AgentInfo) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *AgentInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Heartbeat keeps connection alive; payload is optional runtime stats to help
// ops dashboards without scraping Prom.
type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TsUnixMs      uint64                 `protobuf:"varint,1,opt,name=ts_unix_ms,json=tsUnixMs,proto3" json:"ts_unix_ms,omitempty"`  // sender wall clock for latency calc
	Goroutines    uint32                 `protobuf:"varint,2,opt,name=goroutines,proto3" json:"goroutines,omitempty"`                // runtime.NumGoroutine()
	HeapBytes     uint64                 `protobuf:"varint,3,opt,name=heap_bytes,json=heapBytes,proto3" json:"heap_bytes,omitempty"` // runtime.MemStats.Alloc
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *Heartbeat) GetTsUnixMs() uint64 {
	if x != nil {
		return x.TsUnixMs
	}
	return 0
}

func (x *Heartbeat) GetGoroutines() uint32 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

func (x *Heartbeat) GetHeapBytes() uint64 {
	if x != nil {
		return x.HeapBytes
	}
	return 0
}

// ControlRequest allows the gateway to instruct agent to change behaviour.
type ControlRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*ControlRequest_AdjustSampling
	//	*ControlRequest_RequestSnapshot
	Cmd           isControlRequest_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlRequest) Reset() {
	*x = ControlRequest{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRequest) ProtoMessage() {}

func (x *ControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRequest.ProtoReflect.Descriptor instead.
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *ControlRequest) GetCmd() isControlRequest_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ControlRequest) GetAdjustSampling() *AdjustSamplingRate {
	if x != nil {
		if x, ok := x.Cmd.(*ControlRequest_AdjustSampling); ok {
			return x.AdjustSampling
		}
	}
	return nil
}

func (x *ControlRequest) GetRequestSnapshot() *RequestSnapshot {
	if x != nil {
		if x, ok := x.Cmd.(*ControlRequest_RequestSnapshot); ok {
			return x.RequestSnapshot
		}
	}
	return nil
}

type isControlRequest_Cmd interface {
	isControlRequest_Cmd()
}

type ControlRequest_AdjustSampling struct {
	AdjustSampling *AdjustSamplingRate `protobuf:"bytes,1,opt,name=adjust_sampling,json=adjustSampling,proto3,oneof"`
}

type ControlRequest_RequestSnapshot struct {
	RequestSnapshot *RequestSnapshot `protobuf:"bytes,2,opt,name=request_snapshot,json=requestSnapshot,proto3,oneof"`
}

func (*ControlRequest_AdjustSampling) isControlRequest_Cmd() {}

func (*ControlRequest_RequestSnapshot) isControlRequest_Cmd() {}

type AdjustSamplingRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hz            uint32                 `protobuf:"varint,1,opt,name=hz,proto3" json:"hz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustSamplingRate) Reset() {
	*x = AdjustSamplingRate{}
	mi := &file_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustSamplingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustSamplingRate) ProtoMessage() {}

func (x *AdjustSamplingRate) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustSamplingRate.ProtoReflect.Descriptor instead.
func (*AdjustSamplingRate) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AdjustSamplingRate) GetHz() uint32 {
	if x != nil {
		return x.Hz
	}
	return 0
}

// RequestSnapshot asks the agent to immediately send a flamegraph chunk (e.g.,
// for UI “Refresh now” button).
type RequestSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *emptypb.Empty         `protobuf:"bytes,1,opt,name=_,proto3" json:"_,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestSnapshot) Reset() {
	*x = RequestSnapshot{}
	mi := &file_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSnapshot) ProtoMessage() {}

func (x *RequestSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSnapshot.ProtoReflect.Descriptor instead.
func (*RequestSnapshot) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *RequestSnapshot) GetX() *emptypb.Empty {
	if x != nil {
		return x.X
	}
	return nil
}

// ControlResponse is returned by agent to ACK or NACK commands.
type ControlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrorMsg      string                 `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"` // non‑empty when ok==false
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlResponse) Reset() {
	*x = ControlResponse{}
	mi := &file_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResponse) ProtoMessage() {}

func (x *ControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResponse.ProtoReflect.Descriptor instead.
func (*ControlResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ControlResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ControlResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// AgentEnvelope wraps the possible upstream messages so the method can stay a
// single stream.
type AgentEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*AgentEnvelope_Info
	//	*AgentEnvelope_Heartbeat
	//	*AgentEnvelope_Ack
	Msg           isAgentEnvelope_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentEnvelope) Reset() {
	*x = AgentEnvelope{}
	mi := &file_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentEnvelope) ProtoMessage() {}

func (x *AgentEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentEnvelope.ProtoReflect.Descriptor instead.
func (*AgentEnvelope) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *AgentEnvelope) GetMsg() isAgentEnvelope_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *AgentEnvelope) GetInfo() *AgentInfo {
	if x != nil {
		if x, ok := x.Msg.(*AgentEnvelope_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *AgentEnvelope) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Msg.(*AgentEnvelope_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *AgentEnvelope) GetAck() *ControlResponse {
	if x != nil {
		if x, ok := x.Msg.(*AgentEnvelope_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

type isAgentEnvelope_Msg interface {
	isAgentEnvelope_Msg()
}

type AgentEnvelope_Info struct {
	Info *AgentInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type AgentEnvelope_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

type AgentEnvelope_Ack struct {
	Ack *ControlResponse `protobuf:"bytes,3,opt,name=ack,proto3,oneof"`
}

func (*AgentEnvelope_Info) isAgentEnvelope_Msg() {}

func (*AgentEnvelope_Heartbeat) isAgentEnvelope_Msg() {}

func (*AgentEnvelope_Ack) isAgentEnvelope_Msg() {}

var File_agent_proto protoreflect.FileDescriptor

const file_agent_proto_rawDesc = "" +
	"\n" +
	"\vagent.proto\x12\aagentpb\x1a\x1bgoogle/protobuf/empty.proto\"w\n" +
	"\tAgentInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\rR\x03pid\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\"h\n" +
	"\tHeartbeat\x12\x1c\n" +
	"\n" +
	"ts_unix_ms\x18\x01 \x01(\x04R\btsUnixMs\x12\x1e\n" +
	"\n" +
	"goroutines\x18\x02 \x01(\rR\n" +
	"goroutines\x12\x1d\n" +
	"\n" +
	"heap_bytes\x18\x03 \x01(\x04R\theapBytes\"\xa6\x01\n" +
	"\x0eControlRequest\x12F\n" +
	"\x0fadjust_sampling\x18\x01 \x01(\v2\x1b.agentpb.AdjustSamplingRateH\x00R\x0eadjustSampling\x12E\n" +
	"\x10request_snapshot\x18\x02 \x01(\v2\x18.agentpb.RequestSnapshotH\x00R\x0frequestSnapshotB\x05\n" +
	"\x03cmd\"$\n" +
	"\x12AdjustSamplingRate\x12\x0e\n" +
	"\x02hz\x18\x01 \x01(\rR\x02hz\"6\n" +
	"\x0fRequestSnapshot\x12#\n" +
	"\x01_\x18\x01 \x01(\v2\x16.google.protobuf.EmptyR\x00\">\n" +
	"\x0fControlResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x1b\n" +
	"\terror_msg\x18\x02 \x01(\tR\berrorMsg\"\xa2\x01\n" +
	"\rAgentEnvelope\x12(\n" +
	"\x04info\x18\x01 \x01(\v2\x12.agentpb.AgentInfoH\x00R\x04info\x122\n" +
	"\theartbeat\x18\x02 \x01(\v2\x12.agentpb.HeartbeatH\x00R\theartbeat\x12,\n" +
	"\x03ack\x18\x03 \x01(\v2\x18.agentpb.ControlResponseH\x00R\x03ackB\x05\n" +
	"\x03msg2P\n" +
	"\fAgentService\x12@\n" +
	"\tHandshake\x12\x16.agentpb.AgentEnvelope\x1a\x17.agentpb.ControlRequest(\x010\x01B2Z0github.com/Voskan/flarego/internal/proto;agentpbb\x06proto3"

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData []byte
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)))
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_agent_proto_goTypes = []any{
	(*AgentInfo)(nil),          // 0: agentpb.AgentInfo
	(*Heartbeat)(nil),          // 1: agentpb.Heartbeat
	(*ControlRequest)(nil),     // 2: agentpb.ControlRequest
	(*AdjustSamplingRate)(nil), // 3: agentpb.AdjustSamplingRate
	(*RequestSnapshot)(nil),    // 4: agentpb.RequestSnapshot
	(*ControlResponse)(nil),    // 5: agentpb.ControlResponse
	(*AgentEnvelope)(nil),      // 6: agentpb.AgentEnvelope
	(*emptypb.Empty)(nil),      // 7: google.protobuf.Empty
}
var file_agent_proto_depIdxs = []int32{
	3, // 0: agentpb.ControlRequest.adjust_sampling:type_name -> agentpb.AdjustSamplingRate
	4, // 1: agentpb.ControlRequest.request_snapshot:type_name -> agentpb.RequestSnapshot
	7, // 2: agentpb.RequestSnapshot._:type_name -> google.protobuf.Empty
	0, // 3: agentpb.AgentEnvelope.info:type_name -> agentpb.AgentInfo
	1, // 4: agentpb.AgentEnvelope.heartbeat:type_name -> agentpb.Heartbeat
	5, // 5: agentpb.AgentEnvelope.ack:type_name -> agentpb.ControlResponse
	6, // 6: agentpb.AgentService.Handshake:input_type -> agentpb.AgentEnvelope
	2, // 7: agentpb.AgentService.Handshake:output_type -> agentpb.ControlRequest
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	file_agent_proto_msgTypes[2].OneofWrappers = []any{
		(*ControlRequest_AdjustSampling)(nil),
		(*ControlRequest_RequestSnapshot)(nil),
	}
	file_agent_proto_msgTypes[6].OneofWrappers = []any{
		(*AgentEnvelope_Info)(nil),
		(*AgentEnvelope_Heartbeat)(nil),
		(*AgentEnvelope_Ack)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
