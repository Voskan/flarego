// internal/proto/gateway.proto
// This schema defines the gRPC contract between the in‑process FlareGo agent
// and the central gateway.  The protocol is intentionally minimal in v0.1:
// agents stream raw flame‑graph JSON frames; the gateway may respond with an
// optional acknowledgement or future control messages.  Keeping the payload as
// opaque bytes avoids frequent schema churn on the hot path.

// @generated by protoc-gen-connect-es v0.13.0 with parameter "import_extension=ts"
// @generated from file gateway.proto (package agentpb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FlamegraphChunk } from "./common_pbts";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * GatewayService is implemented by the gateway; agents establish a
 * bidirectional stream so the server can send control messages in future (e.g.
 * sampling‑rate adjustments).  For v0.1 the server replies with an Empty upon
 * stream closure.
 *
 * @generated from service agentpb.GatewayService
 */
export declare const GatewayService: {
  readonly typeName: "agentpb.GatewayService",
  readonly methods: {
    /**
     * @generated from rpc agentpb.GatewayService.Stream
     */
    readonly stream: {
      readonly name: "Stream",
      readonly I: typeof FlamegraphChunk,
      readonly O: typeof Empty,
      readonly kind: MethodKind.ClientStreaming,
    },
  }
};

