// internal/proto/trace.proto
// Canonical schema describing low‑level runtime events exchanged between
// FlareGo components (future versions may stream this in addition to aggregated
// flamegraph chunks).  The message structure mirrors pkg/trace.Event so that
// zero‑copy mapping is straightforward.
//
// Notes for maintainers:
//   • Field numbers are frozen – never reuse.
//   • All numeric types use fixed‑width unsigned/signed integers to minimise
//     ambiguity across languages.
//   • No package‑level options besides go_package to keep imports clean.

// @generated by protoc-gen-es v1.10.1 with parameter "import_extension=ts"
// @generated from file trace.proto (package agentpb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * EventType matches constants in pkg/trace.EventType.
 *
 * @generated from enum agentpb.EventType
 */
export declare enum EventType {
  /**
   * Unknown / reserved
   *
   * @generated from enum value: ET_UNSPECIFIED = 0;
   */
  ET_UNSPECIFIED = 0,

  /**
   * 1–999 are kept in sync with Go runtime/trace; subset we care about.
   *
   * goroutine creation
   *
   * @generated from enum value: ET_GO_CREATE = 1;
   */
  ET_GO_CREATE = 1,

  /**
   * goroutine finished
   *
   * @generated from enum value: ET_GO_END = 2;
   */
  ET_GO_END = 2,

  /**
   * goroutine scheduled
   *
   * @generated from enum value: ET_GO_SCHED = 3;
   */
  ET_GO_SCHED = 3,

  /**
   * goroutine blocked
   *
   * @generated from enum value: ET_GO_BLOCKED = 4;
   */
  ET_GO_BLOCKED = 4,

  /**
   * GC cycle start
   *
   * @generated from enum value: ET_GC_START = 5;
   */
  ET_GC_START = 5,

  /**
   * GC end
   *
   * @generated from enum value: ET_GC_END = 6;
   */
  ET_GC_END = 6,

  /**
   * FlareGo synthetic events (1000+)
   *
   * @generated from enum value: ET_HEAP_SAMPLE = 1000;
   */
  ET_HEAP_SAMPLE = 1000,

  /**
   * @generated from enum value: ET_BLOCKED_CNT = 1001;
   */
  ET_BLOCKED_CNT = 1001,
}

/**
 * Event is a single runtime record.
 *
 * @generated from message agentpb.Event
 */
export declare class Event extends Message<Event> {
  /**
   * monotonic ns since process start
   *
   * @generated from field: uint64 ts = 1;
   */
  ts: bigint;

  /**
   * goroutine id (0 if N/A)
   *
   * @generated from field: uint64 g = 2;
   */
  g: bigint;

  /**
   * processor id (-1 if unknown)
   *
   * @generated from field: int32 p = 3;
   */
  p: number;

  /**
   * @generated from field: agentpb.EventType type = 4;
   */
  type: EventType;

  /**
   * payload (bytes, ns, count) depending on type
   *
   * @generated from field: sint64 value = 5;
   */
  value: bigint;

  /**
   * PCs root→leaf (may be empty)
   *
   * @generated from field: repeated uint64 stack = 6;
   */
  stack: bigint[];

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agentpb.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * TraceBatch bundles events for efficient transport.
 *
 * @generated from message agentpb.TraceBatch
 */
export declare class TraceBatch extends Message<TraceBatch> {
  /**
   * @generated from field: repeated agentpb.Event events = 1;
   */
  events: Event[];

  /**
   * wall_time is optional absolute timestamp (RFC3339) of first event, useful
   * for correlation across hosts.  Empty string implies sender’s clock.
   *
   * @generated from field: string wall_time = 2;
   */
  wallTime: string;

  constructor(data?: PartialMessage<TraceBatch>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agentpb.TraceBatch";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TraceBatch;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TraceBatch;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TraceBatch;

  static equals(a: TraceBatch | PlainMessage<TraceBatch> | undefined, b: TraceBatch | PlainMessage<TraceBatch> | undefined): boolean;
}

