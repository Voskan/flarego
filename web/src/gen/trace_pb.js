// internal/proto/trace.proto
// Canonical schema describing low‑level runtime events exchanged between
// FlareGo components (future versions may stream this in addition to aggregated
// flamegraph chunks).  The message structure mirrors pkg/trace.Event so that
// zero‑copy mapping is straightforward.
//
// Notes for maintainers:
//   • Field numbers are frozen – never reuse.
//   • All numeric types use fixed‑width unsigned/signed integers to minimise
//     ambiguity across languages.
//   • No package‑level options besides go_package to keep imports clean.

// @generated by protoc-gen-es v1.10.1 with parameter "import_extension=ts"
// @generated from file trace.proto (package agentpb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * EventType matches constants in pkg/trace.EventType.
 *
 * @generated from enum agentpb.EventType
 */
export const EventType = /*@__PURE__*/ proto3.makeEnum(
  "agentpb.EventType",
  [
    {no: 0, name: "ET_UNSPECIFIED"},
    {no: 1, name: "ET_GO_CREATE"},
    {no: 2, name: "ET_GO_END"},
    {no: 3, name: "ET_GO_SCHED"},
    {no: 4, name: "ET_GO_BLOCKED"},
    {no: 5, name: "ET_GC_START"},
    {no: 6, name: "ET_GC_END"},
    {no: 1000, name: "ET_HEAP_SAMPLE"},
    {no: 1001, name: "ET_BLOCKED_CNT"},
  ],
);

/**
 * Event is a single runtime record.
 *
 * @generated from message agentpb.Event
 */
export const Event = /*@__PURE__*/ proto3.makeMessageType(
  "agentpb.Event",
  () => [
    { no: 1, name: "ts", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "g", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "p", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(EventType) },
    { no: 5, name: "value", kind: "scalar", T: 18 /* ScalarType.SINT64 */ },
    { no: 6, name: "stack", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ],
);

/**
 * TraceBatch bundles events for efficient transport.
 *
 * @generated from message agentpb.TraceBatch
 */
export const TraceBatch = /*@__PURE__*/ proto3.makeMessageType(
  "agentpb.TraceBatch",
  () => [
    { no: 1, name: "events", kind: "message", T: Event, repeated: true },
    { no: 2, name: "wall_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

